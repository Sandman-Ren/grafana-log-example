volumes:
    logvolume: {} # <- defines the named volume 
services:
    alloy:
        image: grafana/alloy:v1.7.5
        ports:
            - "12345:12345"
        volumes:
            - ./config.alloy:/etc/alloy/config.alloy
            - logvolume:/var/log:ro
        command: >
            run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    prometheus:
     image: prom/prometheus:v2.53.4
     command:
       - --web.enable-remote-write-receiver
       - --config.file=/etc/prometheus/prometheus.yml
     ports:
       - "9090:9090"
    loki:
        image: grafana/loki:3.4.3
        ports:
            - "3100:3100"
        command: -config.file=/etc/loki/local-config.yaml
    grafana:
        image: grafana/grafana:11.6.0
        environment:
            - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        entrypoint:
            - sh
            - -euc
            - |
              mkdir -p /etc/grafana/provisioning/datasources
              cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
              apiVersion: 1
              datasources:
                - name: Loki
                  type: loki
                  access: proxy
                  orgId: 1
                  url: http://loki:3100
                  basicAuth: false
                  isDefault: false
                  version: 1
                  editable: false
                - name: Prometheus
                  type: prometheus
                  orgId: 1
                  url: http://prometheus:9090
                  basicAuth: false
                  isDefault: true
                  version: 1
                  editable: false
              EOF
              /run.sh
        ports:
            - "3000:3000"

    # Express App Instance 1
    mockapi-1:
        image: sandmanren/example_service:latest
        environment:
            - SERVER_NAME=mockapi-1
            - SERVER_PORT=4001
        ports:
            - "4001:4001"
        volumes:
            - logvolume:/var/log:rw

    # Express App Instance 2
    mockapi-2:
        image: sandmanren/example_service:latest
        environment:
            - SERVER_NAME=mockapi-2
            - SERVER_PORT=4002
        ports:
            - "4002:4002"
        volumes:
            - logvolume:/var/log:rw

    # Express App Instance 3
    mockapi-3:
        image: sandmanren/example_service:latest
        environment:
            - SERVER_NAME=mockapi-3
            - SERVER_PORT=4003
        ports:
            - "4003:4003"
        volumes:
            - logvolume:/var/log:rw

    # Nginx Load Balancer
    nginx:
        image: nginx:latest
        ports:
            - "8080:80"
        volumes:
            - ./nginx.conf:/etc/nginx/nginx.conf:ro
        depends_on:
            - mockapi-1
            - mockapi-2
            - mockapi-3

    # BusyBox Load Testing Service
    busybox:
        image: busybox:latest
        depends_on:
            - nginx
        environment:
            - QPS=10
        command: >
            sh -c " while true; do
                echo 'Starting load test for /liveliness and /user endpoints';
                for i in $(seq 1 $QPS); do
                    wget -qO- http://nginx:80/liveliness > /dev/null &
                    wget -qO- http://nginx:80/user > /dev/null &
                done;
                sleep 1;
            done"
